@page
@model EnrollModel
@{
    ViewData["Title"] = "Course Enrollment";
}

<h3>Enrollment</h3>

<!-- Popup Message for Already Enrolled Students -->
@if (Model.IsAlreadyEnrolled)
{
    <div class="alert alert-warning">
        <strong>Notice:</strong> You are already enrolled for this semester. Please go to the <a asp-page="/AddDropCourse" class="fw-bold text-danger">Add/Drop Course</a> page to modify your enrollment.
    </div>
}else{


<div class="card mb-3 p-3">
    <div class="row">
        <h6 class="col-12 mb-3 fw-bold">Student Info</h6>

        <!-- Left Column -->
        <div class="col-6">
            <div class="d-flex">
                <span class="fw-bold flex-shrink-0" style="width: 150px;">Student Name:</span>
                <span>@Model.Student?.FullName</span>
            </div>
            <div class="d-flex">
                <span class="fw-bold flex-shrink-0" style="width: 150px;">Matriculation No:</span>
                <span>@Model.Student?.MatricNo</span>
            </div>
            <div class="d-flex">
                <span class="fw-bold flex-shrink-0" style="width: 150px;">IC No/Passport No:</span>
                <span>@Model.Student?.ICNumber</span>
            </div>
        </div>

        <!-- Right Column -->
        <div class="col-6">
            <div class="d-flex">
                <span class="fw-bold flex-shrink-0" style="width: 180px;">Semester:</span>
                <span>@Model.Semester?.Name</span>
            </div>
            <div class="d-flex">
                <span class="fw-bold flex-shrink-0" style="width: 180px;">Program:</span>
                <span>@Model.Student?.Program</span>
            </div>
        </div>
    </div>
</div>

<div id="enrollmentSection" class="card p-3" style="display: block;">
    <!-- Enrollment Form -->
<form id="enrollmentForm">
        <div class="d-flex mb-3 align-items-end">
            <div class="flex-grow-1">
                <label for="courseId">Select Course:</label>
                <select id="courseId" class="form-control">
                    @foreach (var course in Model.AvailableCourses)
                    {
                        <option value="@course.CourseID">@course.CourseCode - @course.CourseName</option>
                    }
                </select>
            </div>
            <button type="button" class="btn btn-primary ms-3" style="height: min-content;" onclick="addCourse()">Add</button>
    </div>
</form>

<!-- Enrolled Courses List -->

<h4 class="mt-4 text-center">Courses Selected</h4>
    <table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Course Code</th>
            <th>Course Name</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody id="enrolledCoursesTable"></tbody>
</table>

    <div id="alertMessage" class="alert alert-danger" role="alert" style="display: none;">
        Please select at least one course before proceeding to the summary!
    </div>
<!-- Proceed to Summary -->
    <button id="submit" class="btn btn-success mt-4" onclick="showSummary()">Submit</button>
</div>

<!-- Summary Section (Initially Hidden) -->
<div id="summarySection" class="card p-3" style="display: none;">
    <h4 class="text-center">Enrollment Summary</h4>
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Course Code</th>
                <th>Course Name</th>
            </tr>
        </thead>
        <tbody id="summaryCoursesTable"></tbody>
    </table>

    <h6 id="fee" class="text-danger pt-1 mb-4"></h6>

    <!-- Hidden input to store selected courses -->
    <input type="hidden" id="selectedCoursesInput" name="SelectedCoursesJson" />

    <!-- Submit Button -->
    <button type="button" class="btn btn-primary" onclick="submitEnrollment()">Make Payment</button>

    <!-- Back Button -->
    <button type="button" class="btn btn-secondary" onclick="hideSummary()">Back</button>
</div>
}

<!-- JavaScript to Handle Dynamic Enrollment -->
<script>
    let enrolledCourses = [];
    let availabelCourse = @Html.Raw(Json.Serialize(Model.AvailableCourses))

    function addCourse() {
        const courseId = +document.getElementById("courseId").value;
        const selectedCourse = availabelCourse.find(course => course.courseID === courseId)
        
        if (!enrolledCourses.some(c => c.courseID == courseId)) {
            enrolledCourses.push(selectedCourse);

            let row = `<tr id="row-${selectedCourse.courseID}">
                            <td>${selectedCourse.courseCode}</td>
                            <td>${selectedCourse.courseName}</td>
                            <td>
                                <button class="btn btn-danger btn-sm" onclick="removeCourse(${selectedCourse.courseID})">Remove</button>
                            </td>
                        </tr>`;
            document.getElementById("enrolledCoursesTable").innerHTML += row;
            document.getElementById("alertMessage").style.display = "none";
        }
        updateProceedButton();
    }

    function removeCourse(courseId) {
        enrolledCourses = enrolledCourses.filter(c => c.courseID != courseId);
        document.getElementById(`row-${courseId}`).remove();
        updateProceedButton();
    }

    function showSummary() {
        if (enrolledCourses.length === 0) {
            document.getElementById("alertMessage").style.display = "block";
            return;
        }

        document.getElementById("alertMessage").style.display = "none";

        if (enrolledCourses.length > 0) {
            document.getElementById("summarySection").style.display = "block";
            document.getElementById("submit").style.display = "none";

            let summaryTable = document.getElementById("summaryCoursesTable");
            let totalFee = 0;
            summaryTable.innerHTML = "";
            enrolledCourses.forEach(course => {
                console.log(course)
                summaryTable.innerHTML += `<tr><td>${course.courseCode}</td><td>${course.courseName}</td></tr>`;
                totalFee += course.amount;
            });

            let fee = document.getElementById("fee");
            fee.innerText = "Total Tuition Fee: RM " +  totalFee;

            document.getElementById("selectedCoursesInput").value = JSON.stringify(enrolledCourses);
            document.getElementById("enrollmentSection").style.display = "none";
        }
    }

    function hideSummary() {
        document.getElementById("summarySection").style.display = "none";
        document.getElementById("submit").style.display = "block";
        document.getElementById("enrollmentSection").style.display = "block";
    }

    function submitEnrollment() {
        fetch("/Enroll", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(enrolledCourses) 
        })
        .then(response => {
            if (!response.ok) {
                throw new Error("Enrollment submission failed.");
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                enrolledCourses = [];
                alert("Enrollment successful!");
                window.location.href = "/Payment";
            } else {
                alert("Enrollment failed: " + data.message);
            }
        })
        .catch(error => console.error("Error:", error));
    }

    function updateProceedButton() {
        document.getElementById("submit").disabled = enrolledCourses.length === 0;
    }

    // Ensure button is disabled on page load
    document.addEventListener("DOMContentLoaded", () => {
        updateProceedButton();
    });
</script>
