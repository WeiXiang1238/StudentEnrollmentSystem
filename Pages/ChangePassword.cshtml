@page
@model ChangePasswordModel
@{
    ViewData["Title"] = "Change Password";
}

<h2>Change Password</h2>

<!-- Display Alert Messages -->
@if (!string.IsNullOrEmpty(Model.Message))
{
    <div class="alert @(Model.IsSuccess ? "alert-success" : "alert-danger")" role="alert">
        @Model.Message
    </div>
}

<!-- Change Password Form -->
<form method="post" id="changePasswordForm" class="needs-validation" novalidate>
    <div class="mb-3">
        <label for="currentPassword" class="form-label">Current Password</label>
        <input type="password" id="currentPassword" asp-for="Input.CurrentPassword" class="form-control" required />
        <span class="text-danger" asp-validation-for="Input.CurrentPassword"></span>
    </div>

    <div class="mb-3">
        <label for="newPassword" class="form-label">New Password</label>
        <input type="password" id="newPassword" asp-for="Input.NewPassword" class="form-control" required />
        <span class="text-danger" asp-validation-for="Input.NewPassword"></span>
    </div>

    <div class="mb-3">
        <label for="confirmPassword" class="form-label">Confirm New Password</label>
        <input type="password" id="confirmPassword" asp-for="Input.ConfirmPassword" class="form-control" required />
        <span class="text-danger" asp-validation-for="Input.ConfirmPassword"></span>
    </div>

    <button type="submit" class="btn btn-primary">Change Password</button>
</form>

@if (Model.IsSuccess)
{
    <button class="btn btn-secondary mt-3" onclick="window.location.replace('/')">
        Back to Home
    </button>
}
@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        (function () {
            'use strict';
            var form = document.getElementById('changePasswordForm');

            form.addEventListener('submit', function (event) {
                let isValid = true;

                // Validate current password
                let currentPassword = document.getElementById("currentPassword");
                if (currentPassword.value.trim() === "") {
                    currentPassword.classList.add("is-invalid");
                    isValid = false;
                } else {
                    currentPassword.classList.remove("is-invalid");
                }

                // Validate new password (at least 6 characters)
                let newPassword = document.getElementById("newPassword");
                if (newPassword.value.length < 6) {
                    newPassword.classList.add("is-invalid");
                    isValid = false;
                } else {
                    newPassword.classList.remove("is-invalid");
                }

                // Validate confirm password (must match new password)
                let confirmPassword = document.getElementById("confirmPassword");
                if (confirmPassword.value !== newPassword.value) {
                    confirmPassword.classList.add("is-invalid");
                    isValid = false;
                } else {
                    confirmPassword.classList.remove("is-invalid");
                }

                if (!isValid) {
                    event.preventDefault();
                    event.stopPropagation();
                }
            }, false);
        })();
    </script>
}
