@page
@model StudentStatementModel
@{
    ViewData["Title"] = "Student Statement";
}

<div id="studentStatementPage">
    <h3>Student Statement</h3>

    <!-- Date Filter -->
    <form method="post" id="filterForm">
        <div class="row">
            <div class="col-md-3">
                <label>From</label>
                <input type="date" asp-for="FromDate" class="form-control" required />
            </div>
            <div class="col-md-3">
                <label>To</label>
                <input type="date" asp-for="ToDate" class="form-control" required />
            </div>
            <div class="col-md-3 align-self-end">
                <button type="submit" class="btn btn-primary" onclick="showErrorIfNeeded(event)">View</button>
                <button type="button" class="btn btn-success" onclick="printStatement()">Print</button>
            </div>
        </div>
    </form>

    <!-- Error Message (Initially Hidden) -->
    <p id="errorMessage" class="mt-3 text-danger" style="display: none;">
        No transactions found for the selected date range.
    </p>

    <!-- Display Student Transactions -->
    @if (Model.StatementData != null && Model.StatementData.Any())
    {
        <div class="mt-4" id="printableArea">
            <!-- Student Information -->
            @if (Model.Student != null)
            {
                <div class="mt-3 p-3 border rounded bg-light">
                    <h6 class="col-12 mb-3 fw-bold">Student Info</h6>
                    <div class="row">
                        <!-- Left Column -->
                        <div class="col-6">
                            <div class="d-flex">
                                <span class="fw-bold flex-shrink-0" style="width: 150px;">Student Name:</span>
                                <span>@Model.Student?.FullName</span>
                            </div>
                            <div class="d-flex">
                                <span class="fw-bold flex-shrink-0" style="width: 150px;">Matriculation No:</span>
                                <span>@Model.Student?.MatricNo</span>
                            </div>
                            <div class="d-flex">
                                <span class="fw-bold flex-shrink-0" style="width: 150px;">IC No/Passport No:</span>
                                <span>@Model.Student?.ICNumber</span>
                            </div>
                        </div>

                        <!-- Right Column -->
                        <div class="col-6">
                            <div class="d-flex">
                                <span class="fw-bold flex-shrink-0" style="width: 180px;">Semester:</span>
                                <span>@Model.Semester?.Name</span>
                            </div>
                            <div class="d-flex">
                                <span class="fw-bold flex-shrink-0" style="width: 180px;">Program:</span>
                                <span>@Model.Student?.Program</span>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <table class="table table-striped">
                <thead class="bg-danger text-white">
                    <tr>
                        <th>Date</th>
                        <th>Process</th>
                        <th>Particulars</th>
                        <th>Course Code/Invoice No</th>
                        <th>Semester</th>
                        <th>Amount Due (RM)</th>
                        <th>Amount Paid (RM)</th>
                        <th>Total Due/Paid (RM)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var semester in Model.StatementData.GroupBy(x => x.Semester))
                    {
                        <tr class="bg-secondary text-white">
                            <td colspan="8"><strong>@semester.Key</strong></td>
                        </tr>

                        @foreach (var item in semester)
                        {
                            <tr>
                                <td>@item.Date.ToString("dd-MM-yyyy")</td>
                                <td>@item.Process</td>
                                <td>@item.Particulars</td>
                                <td>@item.DocumentNo</td>
                                <td>@item.Semester</td>
                                <td>@(item.Process == "ENROL" ? item.AmountDue.ToString("N2") : "-")</td>
                                <td>@(item.Process == "PAYMENT" ? item.AmountPaid.ToString("N2") : "-")</td>
                                <td>@(item.TotalDuePaid.ToString("N2"))</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>

            <!-- Summary -->
            <h4 class="mt-4">Balance - University Fee</h4>
            <table class="table table-bordered">
                <thead class="bg-dark text-white">
                    <tr>
                        <th>Total Due (RM)</th>
                        <th>Total Paid (RM)</th>
                        <th>Balance (RM)</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@Model.TotalDue.ToString("N2")</td>
                        <td>@Model.TotalPaid.ToString("N2")</td>
                        <td>@(Model.TotalDue - Model.TotalPaid).ToString("N2")</td>
                    </tr>
                </tbody>
            </table>
        </div>
    }
</div>

<!-- JavaScript to Handle Error Display -->
<script>
    function showErrorIfNeeded(event) {
        let hasData = @Model.StatementData?.Any().ToString().ToLower();
        let errorMessage = document.getElementById("errorMessage");

        if (!hasData) {
            errorMessage.style.display = "block";
            event.preventDefault(); // Prevent form submission when no data is found
        } else {
            errorMessage.style.display = "none";
        }
    }

    function printStatement() {
        // Temporarily override CSS to make everything visible
        let style = document.createElement('style');
        style.innerHTML = `
            @@media print {
                body {
                    visibility: none !important;
                }
                #printableArea {
                    visibility: visible !important;
                    width: 100%;
                }
            }
        `;
        document.head.appendChild(style);

        // Hide non-printable elements
        document.getElementById("filterForm").style.display = "none";
        document.querySelector(".btn-success").style.display = "none";

        // Print the page
        window.print();

        // Restore the visibility & remove added style
        document.head.removeChild(style);
        document.getElementById("filterForm").style.display = "block";
        document.querySelector(".btn-success").style.display = "inline-block";
    }
</script>
